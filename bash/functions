#! /usr/bin/env bash

set-title()
{
	printf '\e]2;%s\a' "$*"
}

strip-ansi()
{
    sed -r "s/\x1B\[.?([0-9]{1,2}(;[0-9]{1,2})?)?[l|h|m|K]//g"
}

quickbuild-log-cat()
{
    local path=$1
    cat $path | strip-ansi | grep -v "\(INFO\|WARNING\):suites_runner:" | grep -v InsecurePlatformWarning
}

quickbuild-log-suite-cat()
{
    local path=$1
    local suite=$2
    quickbuild-log-cat $path | grep ${suite} | sed -r "s/.*${suite}: //g"
}

cdconfiguration()
{
    cd ~/work/cfy/configurations/$1
}

rmq()
{
    rm -r ~/opt/rabbitmq_server-3.5.3/var
    rabbitmq-server
}

taskcurrent()
{
    echo "urgency.user.tag.${1}.coefficient=1.0" > ~/.task/work/current
}

init-kilmand-repo()
{
    local remote_repo_path="home/dan/repos/$(basename $PWD).git"
    ssh kilmand -- "\
        mkdir /${remote_repo_path}; \
        cd /${remote_repo_path}; \
        git --bare init; \
        git config core.sharedrepository 1; \
        git config receive.denyNonFastforwards true; \
        find objects -type d -exec chmod 02770 {} \;
    "
    git remote add origin "ssh://kilmand/${remote_repo_path}"
    git push -u origin master
}

clone-kilmand-repo()
{
    local remote_repo_path="/home/dan/repos/${1}.git"
    git clone kilmand:${remote_repo_path}
}

clear-vbox-network()
{
    VBoxManage hostonlyif remove vboxnet${1}
}

backup-dconf-user()
{
    local conf_file="${HOME}/.config/dconf/user"
    local conf_file_backup="${HOME}/docs/backup/system/config-dconf-user"
    echo backing up $conf_file to $conf_file_backup
    cp $conf_file $conf_file_backup
}
